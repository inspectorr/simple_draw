{"version":3,"sources":["components/Canvas/index.js","components/ControlPanel/Button.js","components/ControlPanel/images/BrushImage.js","components/ControlPanel/images/ColorImage.js","components/ControlPanel/images/ThicknessImage.js","components/ControlPanel/images/EraserImage.js","components/ControlPanel/images/UndoImage.js","components/ControlPanel/images/DownloadImage.js","components/ControlPanel/index.js","components/Palette/index.js","components/ThicknessSlider/index.js","components/App.js","index.js"],"names":["Canvas","state","brush","Object","assign","_this","props","panelProps","buffer","history","currentInputLinePoints","N","this","length","console","log","concat","color","thickness","canvasURL","refs","canvas","toDataURL","setCanvasURL","ctx","getContext","save","fillStyle","fillRect","width","height","restore","sendURL","closingSliderOnSingleTap","self","coords","getBoundingClientRect","startInput","x","y","addPointToCurrentInputLine","_self$props$app$contr","app","controlPanel","mode","drawPoint","moveTo","_self$props$app$contr2","slice","UPDATE","setState","endInput","_self$props$app$contr3","addLineToHistory","printServiceLog","onMouseMove","event","thicknessSlider","open","closeSlider","pageX","left","pageY","top","onMouseUp","removeEventListener","onTouchMove","preventDefault","targetTouches","onTouchEnd","addEventListener","push","points","_this2","pop","forEach","stage","point","_this3","dxMax","dyMax","i","_buffer$i","x1","y1","_buffer","x2","y2","dx","Math","abs","dy","drawCurve","strokeStyle","lineWidth","lineJoin","lineCap","beginPath","bezierCurveTo","stroke","arc","PI","fill","react_default","a","createElement","id","ref","style","position","Component","muteColor","r","parseInt","g","b","floor","Button","bgColor","side","image","Image","draw","icon","drawImage","pressed","animatePress","button","press","depress","onClick","BrushImage","classCallCheck","document","S","translate","scale","closePath","rotate","lineTo","ColorImage","ThicknessImage","T","EraserImage","shift","inscribedWidth","sqrt","pow","strokeRect","sqrt2","R","arrowSide","offset","arrowHeight","ControlPanel","settings","items","Button_Button","key","setDrawMode","palette","closePalette","openPalette","openSlider","setEraseMode","UndoImage","undo","href","canvasHref","download","DownloadImage","backgroundColor","borderBottom","Palette","possibleConstructorReturn","getPrototypeOf","call","min","colors","clientX","clientY","fi","atan2","setBrushColor","options","start","performance","now","requestAnimationFrame","animate","time","timeFraction","duration","progress","timing","bg","lastDrawedSector","angle","setTimeout","sector","ceil","marginTop","ThicknessSlider","appear","shiftX","line","lineCoords","thumb","minThickness","maxThickness","startDrag","startClientX","thumbCoords","onDocumentMouseMove","onDocumentTouchMove","newLeft","rightEdge","offsetWidth","newThickness","setBrushThickness","onDocumentMouseUp","onDocumentTouchEnd","target","closest","slider","sliderLineHeight","sliderThumbHeight","sliderThumbWidth","thumbStartLeft","className","marginLeft","borderBottomLeftRadius","borderBottomRightRadius","borderTop","documentElement","clientWidth","clientHeight","App","React","createRef","window","controlPanelHeight","opacity","current","canvasHeight","toString","reverseColor","Canvas_Canvas","bind","ControlPanel_ControlPanel","orientation","Palette_Palette","ThicknessSlider_ThicknessSlider","root","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.0e41b86c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n\r\nexport default class Canvas extends Component {\r\n    state = {\r\n        brush: Object.assign({}, this.props.panelProps.brush),\r\n\r\n        buffer: [],\r\n        history: [],\r\n        currentInputLinePoints: [],\r\n    }\r\n\r\n    // getURL() {\r\n    //     return this.refs.canvas.toDataURL('image/jpeg', 1);\r\n    // }\r\n\r\n    printServiceLog() {\r\n        const N = this.state.history.length;\r\n        console.log(\r\n            `\\nINPUT CAPTURED:`,\r\n            `line-${N}`,\r\n            `points:${this.state.currentInputLinePoints.length}`,\r\n            `color:${this.state.history[N-1].color}`,\r\n            `thickness:${this.state.history[N-1].thickness}`,\r\n        );\r\n        console.log('points =', this.state.currentInputLinePoints);\r\n    }\r\n\r\n    sendURL() {\r\n        // отправляем url холста в App\r\n        const canvasURL = this.refs.canvas.toDataURL('image/jpeg', 1);\r\n        this.props.setCanvasURL(canvasURL);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.canvas;\r\n\r\n        // белый фон\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.save();\r\n        ctx.fillStyle = '#fff';\r\n        ctx.fillRect(0, 0, this.props.width, this.props.height);\r\n        ctx.restore();\r\n\r\n        this.sendURL();\r\n\r\n        const self = this;\r\n        const coords = canvas.getBoundingClientRect();\r\n\r\n        function startInput(x, y) {\r\n            console.log('\\nINPUT STARTED\\n');\r\n\r\n            self.addPointToCurrentInputLine(x, y);\r\n\r\n            let {color, thickness} = self.props.app.controlPanel.brush;\r\n            if (self.props.app.mode === 'erase') color = '#fff';\r\n\r\n            self.drawPoint(x, y, color, thickness);\r\n        }\r\n\r\n        function moveTo(x, y) {\r\n            self.addPointToCurrentInputLine(x, y);\r\n\r\n            let {color, thickness} = self.props.app.controlPanel.brush;\r\n            if (self.props.app.mode === 'erase') color = '#fff';\r\n\r\n            const buffer = self.state.buffer.slice();\r\n\r\n            if (buffer.length>=4) {\r\n                self.UPDATE(buffer, color, thickness);\r\n                self.setState({ buffer: [].concat(buffer[buffer.length-1]) });\r\n            }\r\n        }\r\n\r\n        function endInput() {\r\n            let {color, thickness} = self.props.app.controlPanel.brush;\r\n            if (self.props.app.mode === 'erase') color = '#fff';\r\n\r\n            self.addLineToHistory(\r\n                self.state.currentInputLinePoints,\r\n                color,\r\n                thickness\r\n            );\r\n\r\n            // cлужебная информация в консоль\r\n            self.printServiceLog();\r\n\r\n            self.setState({\r\n                buffer: [],\r\n                currentInputLinePoints: [],\r\n            });\r\n\r\n            self.sendURL();\r\n        }\r\n\r\n        // если произошел единичный тап по холсту,\r\n        // будем закрывать слайдер, не обрабатывая точку\r\n        // для этого...\r\n        let closingSliderOnSingleTap;\r\n\r\n        // компьютерное управление\r\n        canvas.addEventListener('mousedown', onMouseDown);\r\n\r\n        function onMouseDown(event) {\r\n            // ...при нажатии проверяем, открыт ли слайдер\r\n            if (self.props.app.thicknessSlider.open) {\r\n                closingSliderOnSingleTap = true;\r\n            } else {\r\n                startInput(\r\n                    event.pageX - coords.left,\r\n                    event.pageY - coords.top\r\n                );\r\n            }\r\n\r\n            canvas.addEventListener('mousemove', onMouseMove);\r\n            canvas.addEventListener('mouseup', onMouseUp);\r\n        };\r\n\r\n        function onMouseMove(event) {\r\n            // если движение началось, закрываем слайдер и рисуем\r\n            closingSliderOnSingleTap = false;\r\n\r\n            if (self.props.app.thicknessSlider.open) {\r\n                self.props.closeSlider();\r\n            }\r\n\r\n            moveTo(\r\n                event.pageX - coords.left,\r\n                event.pageY - coords.top\r\n            );\r\n        };\r\n\r\n        function onMouseUp(event) {\r\n            // если движения не было, просто закрываем слайдер и всё\r\n            if (closingSliderOnSingleTap) {\r\n                self.props.closeSlider();\r\n                canvas.removeEventListener('mousemove', onMouseMove);\r\n                canvas.removeEventListener('mouseup', onMouseUp);\r\n                return;\r\n            };\r\n\r\n            endInput();\r\n\r\n            canvas.removeEventListener('mousemove', onMouseMove);\r\n            canvas.removeEventListener('mouseup', onMouseUp);\r\n        };\r\n\r\n        // управление на мобильных устройствах\r\n        canvas.addEventListener('touchstart', onTouchStart);\r\n\r\n        function onTouchStart(event) {\r\n            event.preventDefault();\r\n            if (self.props.app.thicknessSlider.open) {\r\n                closingSliderOnSingleTap = true;\r\n            } else {\r\n                startInput(\r\n                    event.targetTouches[0].pageX - coords.left,\r\n                    event.targetTouches[0].pageY - coords.top\r\n                );\r\n            }\r\n\r\n            canvas.addEventListener('touchmove', onTouchMove);\r\n            canvas.addEventListener('touchend', onTouchEnd);\r\n        }\r\n\r\n        function onTouchMove(event) {\r\n            event.preventDefault();\r\n            closingSliderOnSingleTap = false;\r\n            if (self.props.app.thicknessSlider.open) {\r\n                self.props.closeSlider();\r\n            }\r\n            moveTo(\r\n                event.targetTouches[0].pageX - coords.left,\r\n                event.targetTouches[0].pageY - coords.top\r\n            );\r\n        }\r\n\r\n        function onTouchEnd(event) {\r\n            event.preventDefault();\r\n\r\n            if (closingSliderOnSingleTap) {\r\n                self.props.closeSlider();\r\n                canvas.removeEventListener('touchmove', onMouseMove);\r\n                canvas.removeEventListener('touchend', onMouseUp);\r\n                return;\r\n            };\r\n\r\n            endInput();\r\n\r\n            canvas.removeEventListener('touchmove', onTouchMove);\r\n            canvas.removeEventListener('touchend', onTouchEnd);\r\n        }\r\n    }\r\n\r\n    addPointToCurrentInputLine(x, y) {\r\n        let currentInputLinePoints = this.state.currentInputLinePoints.slice();\r\n        currentInputLinePoints.push({x: x, y: y});\r\n\r\n        let buffer = this.state.buffer.slice();\r\n        buffer.push(currentInputLinePoints[currentInputLinePoints.length-1]);\r\n\r\n        this.setState({ currentInputLinePoints, buffer });\r\n    }\r\n\r\n    addLineToHistory(currentInputLinePoints, color, thickness) {\r\n        const points = currentInputLinePoints.slice();\r\n        const history = this.state.history.slice();\r\n        history.push({\r\n            points,\r\n            color,\r\n            thickness\r\n        });\r\n        this.setState({ history });\r\n    }\r\n\r\n    undo() {\r\n        console.log('REDRAWING TO STEP ' + (this.state.history.length-1));\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n        ctx.fillStyle = '#fff';\r\n        ctx.fillRect(0, 0, this.props.width, this.props.height);\r\n\r\n        if (this.state.history.length === 0) return;\r\n\r\n        const history = this.state.history.slice();\r\n        history.pop();\r\n        this.setState({ history });\r\n\r\n        history.forEach((stage) => {\r\n            ctx.save();\r\n\r\n            let buffer = [];\r\n            stage.points.forEach((point) => {\r\n                buffer.push(point);\r\n                if (buffer.length === 1) {\r\n                    this.drawPoint(point.x, point.y, stage.color, stage.thickness);\r\n                }\r\n                if (buffer.length >= 4) {\r\n                    this.UPDATE(buffer, stage.color, stage.thickness);\r\n                    buffer = [].concat(buffer[buffer.length-1]);\r\n                }\r\n            });\r\n\r\n            ctx.restore();\r\n        });\r\n\r\n        this.sendURL();\r\n        this.setState({ buffer: [] });\r\n    }\r\n\r\n    UPDATE(buffer, color, thickness) {\r\n        const N = buffer.length;\r\n        let dxMax = 0, dyMax = 0;\r\n        for (let i = 0; i < N-1; i++) {\r\n            const {x:x1, y:y1} = buffer[i];\r\n            const {x:x2, y:y2} = buffer[i+1];\r\n            const dx = Math.abs(x1 - x2);\r\n            const dy = Math.abs(y1 - y2);\r\n            if (dx > dxMax) dxMax = dx;\r\n            if (dy > dyMax) dyMax = dy;\r\n        }\r\n\r\n        if (dxMax > thickness / 2 || dyMax > thickness / 2) {\r\n            this.drawCurve(buffer, color, thickness);\r\n        } else {\r\n            buffer.forEach((point) => {\r\n                this.drawPoint(\r\n                    point.x, point.y, color, thickness\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    drawCurve(points, color, thickness) { // кривая Безье по четырем точкам\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = thickness;\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineCap = 'round';\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[0].x, points[0].y);\r\n        ctx.bezierCurveTo(\r\n            points[1].x, points[1].y,\r\n            points[2].x, points[2].y,\r\n            points[3].x, points[3].y\r\n        );\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawPoint(x, y, color, thickness) {\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.fillStyle = color;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, thickness / 2, 0, Math.PI*2);\r\n        ctx.fill();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                id='canvas'\r\n                ref='canvas'\r\n                width={this.props.width}\r\n                height={this.props.height}\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: this.props.app.controlPanel.height + 'px',\r\n                    left: 0,\r\n                }}\r\n            ></canvas>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nfunction muteColor(color) {\r\n    color = color.slice(1);\r\n    let r = parseInt(color.slice(0, 2), 16);\r\n    let g = parseInt(color.slice(2, 4), 16);\r\n    let b = parseInt(color.slice(4, 6), 16);\r\n    return `rgb(${Math.floor(r*0.8)}, ${Math.floor(g*0.8)}, ${Math.floor(b*0.8)})`;\r\n}\r\n\r\nexport default class Button extends Component {\r\n\r\n    draw(bgColor) {\r\n        const side = this.props.side;\r\n        const color = this.props.color;\r\n        const thickness = this.props.thickness;\r\n        const Image = this.props.image;\r\n        const image = new Image(side, color, thickness).draw();\r\n\r\n        const icon = this.refs.icon;\r\n        const ctx = icon.getContext('2d');\r\n        ctx.fillStyle = bgColor;\r\n        ctx.fillRect(0, 0, side, side);\r\n        ctx.drawImage(image, 0, 0);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const bgColor = this.props.pressed ? muteColor(this.props.bgColor) : this.props.bgColor;\r\n        this.draw(bgColor);\r\n\r\n        if (!this.props.animatePress) return;\r\n\r\n        // модификация кнопки: анимация нажатия\r\n        const button = this.refs.button;\r\n\r\n        button.addEventListener('mousedown', () => this.press());\r\n        button.addEventListener('mouseup', () => this.depress());\r\n\r\n        button.addEventListener('touchstart', () => this.press());\r\n        button.addEventListener('touchend', () => this.depress());\r\n    }\r\n\r\n    press() {\r\n        const bgColor = muteColor(this.props.bgColor);\r\n        this.draw(bgColor);\r\n    }\r\n\r\n    depress() {\r\n        const bgColor = this.props.bgColor;\r\n        this.draw(bgColor);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const bgColor = this.props.pressed ? muteColor(this.props.bgColor) : this.props.bgColor;\r\n        this.draw(bgColor);\r\n    }\r\n\r\n    render() {\r\n        const side = this.props.side;\r\n\r\n        let canvas = <canvas ref='icon' width={side} height={side}></canvas>;\r\n\r\n        return (\r\n            <button\r\n                ref='button'\r\n                onClick={() => this.props.onClick()}\r\n                style={{width:`${side}px`, height:`${side}px`}}\r\n            >\r\n                {canvas}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n","export default class BrushImage {\r\n    constructor(side, color) {\r\n        this.side = side;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n\r\n        // кисточка\r\n        ctx.save();\r\n        ctx.strokeStyle = this.color;\r\n        ctx.fillStyle = this.color;\r\n        ctx.lineWidth = S * 3;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.beginPath();\r\n        ctx.moveTo(15*S, 20*S);\r\n        ctx.bezierCurveTo(\r\n            30*S, 20*S,\r\n            70*S, 35*S,\r\n            50*S, 50*S\r\n        );\r\n        ctx.bezierCurveTo(\r\n            30*S, 65*S,\r\n            35*S, 30*S,\r\n            15*S, 20*S\r\n        );\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n\r\n        // кольцо\r\n        ctx.save();\r\n        ctx.translate(50*S, 50*S);\r\n        ctx.rotate(- Math.PI / 4);\r\n\r\n        ctx.strokeStyle = this.color;\r\n        // ctx.fillStyle = this.color;\r\n        ctx.lineWidth = S * 2;\r\n        ctx.lineJoin = 'round';\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-6*S, -1*S);\r\n        ctx.bezierCurveTo(\r\n            -9*S, 8*S,\r\n            9*S, 10*S,\r\n            6*S, -1*S\r\n        );\r\n        ctx.stroke();\r\n        ctx.restore();\r\n\r\n        // рукоять\r\n        ctx.save();\r\n        ctx.translate(50*S, 50*S);\r\n        ctx.rotate(- Math.PI / 4);\r\n\r\n        ctx.strokeStyle = this.color;\r\n        // ctx.fillStyle = this.color;\r\n        ctx.lineWidth = S * 2;\r\n        ctx.lineJoin = 'round';\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-6*S, -1*S);\r\n        ctx.lineTo(-6*S, 35*S);\r\n        ctx.bezierCurveTo(\r\n            -6*S, 40*S,\r\n            6*S, 40*S,\r\n            6*S, 35*S\r\n        );\r\n        ctx.lineTo(6*S, -1*S);\r\n\r\n        ctx.stroke();\r\n        ctx.restore();\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","export default class ColorImage {\r\n    constructor(side, color) {\r\n        this.side = side;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n        ctx.save();\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(50*S, 50*S, 30*S, 0, Math.PI*2);\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","export default class ThicknessImage {\r\n    constructor(side, color, thickness) {\r\n        this.side = side;\r\n        this.color = color;\r\n        this.thickness = thickness;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n        const T = this.thickness;\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n        ctx.save();\r\n        ctx.fillStyle = this.color;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(20*S, 20*S);\r\n        ctx.lineTo(20*S + T, 20*S);\r\n        ctx.lineTo(80*S, 80*S);\r\n        ctx.lineTo(80*S - T, 80*S);\r\n        ctx.closePath();        \r\n\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","export default class EraserImage {\r\n    constructor(side, color) {\r\n        this.side = side;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.strokeStyle = this.color;\r\n\r\n        // заданная сторона и смещение ластика от края\r\n        const width = 29*S;\r\n        const shift = 17*S;\r\n\r\n        const inscribedWidth = width + shift*Math.sqrt(2);\r\n        const inscribedHeight = Math.sqrt(2*Math.pow((this.side - inscribedWidth/Math.sqrt(2)), 2));\r\n        const height = inscribedHeight - shift*Math.sqrt(2);\r\n\r\n        ctx.translate(shift, inscribedWidth/Math.sqrt(2));\r\n        ctx.rotate(-Math.PI/4);\r\n\r\n        ctx.strokeRect(0, 0, width, height);\r\n        ctx.fillRect(0, 0, width, height/4);\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","export default class ColorImage {\r\n    constructor(side, color) {\r\n        this.side = side;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        const sqrt2 = Math.sqrt(2);\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n        const lineWidth = 8*S;\r\n        const R = 23*S;\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.strokeStyle = this.color;\r\n\r\n        ctx.lineWidth = lineWidth;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(50*S, 50*S, R, -3*Math.PI/5, 3*Math.PI/4 + 0.1);\r\n        ctx.stroke();\r\n\r\n        const arrowSide = lineWidth*2.5;\r\n\r\n        let x = (sqrt2*50*S - R - sqrt2*arrowSide/2) / sqrt2;\r\n        let y = this.side - x - arrowSide;\r\n\r\n        ctx.translate(x, y);\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(arrowSide, 0);\r\n        ctx.lineTo(0, arrowSide);\r\n\r\n        ctx.fill();\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","export default class ColorImage {\r\n    constructor(side, color) {\r\n        this.side = side;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = this.side;\r\n        canvas.height = this.side;\r\n\r\n        // относительные размеры элементов\r\n        const S = this.side / 100;\r\n        // декартова система координат\r\n        ctx.translate(0, 100*S);\r\n        ctx.scale(1, -1);\r\n\r\n        ctx.save();\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.strokeStyle = this.color;\r\n\r\n        const offset = 21*S;\r\n        const lineWidth = 7*S;\r\n        const arrowHeight = lineWidth*2.5;\r\n\r\n        ctx.fillRect(offset, offset, 100*S-offset*2, lineWidth);\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(50*S, offset+lineWidth);\r\n        ctx.lineTo(offset*1.5, offset+lineWidth+arrowHeight);\r\n        ctx.lineTo(100*S-offset*1.5, offset+lineWidth+arrowHeight);\r\n        ctx.fill();\r\n\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(50*S, offset+lineWidth+arrowHeight-S);\r\n        ctx.lineTo(50*S, 100*S-offset);\r\n        ctx.stroke();\r\n\r\n        ctx.restore();\r\n\r\n        return canvas;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nimport Button from './Button';\r\n\r\nimport BrushImage from './images/BrushImage';\r\nimport ColorImage from './images/ColorImage';\r\nimport ThicknessImage from './images/ThicknessImage';\r\nimport EraserImage from './images/EraserImage';\r\nimport UndoImage from './images/UndoImage';\r\nimport DownloadImage from './images/DownloadImage';\r\n\r\nexport default class ControlPanel extends Component {\r\n    render() {\r\n        const settings = {\r\n            side: this.props.panelProps.height,\r\n            color: this.props.panelProps.brush.color,\r\n            thickness: this.props.panelProps.brush.thickness,\r\n            bgColor: this.props.bgColor,\r\n            mode: this.props.app.mode\r\n        }\r\n\r\n        const items = [\r\n            <Button\r\n                key='Brush'\r\n                image={BrushImage}\r\n                pressed={this.props.app.mode === 'draw'}\r\n                onClick={() => this.props.setDrawMode()}\r\n                {...settings}\r\n            />,\r\n\r\n            <Button\r\n                key='Color'\r\n                image={ColorImage}\r\n                pressed={this.props.app.palette.open}\r\n                onClick={() => {\r\n                    if (!this.props.app.palette.open) {\r\n                        this.props.openPalette();\r\n                    } else this.props.closePalette();\r\n                }}\r\n                {...settings}\r\n            />,\r\n\r\n            <Button\r\n                key='Thickness'\r\n                image={ThicknessImage}\r\n                pressed={this.props.app.thicknessSlider.open}\r\n                onClick={() => {\r\n                    if (!this.props.app.thicknessSlider.open) {\r\n                        this.props.openSlider();\r\n                    } else this.props.closeSlider();\r\n                }}\r\n                {...settings}\r\n            />,\r\n\r\n            <Button\r\n                key='Earser'\r\n                image={EraserImage}\r\n                pressed={this.props.app.mode === 'erase'}\r\n                onClick={() => {\r\n                    if (this.props.app.mode === 'erase') this.props.setDrawMode();\r\n                    else this.props.setEraseMode();\r\n                }}\r\n                {...settings}\r\n            />,\r\n\r\n            <Button\r\n                key='Undo'\r\n                image={UndoImage}\r\n                pressed={false}\r\n                animatePress={true}\r\n                onClick={() => {\r\n                    this.props.undo();\r\n                }}\r\n                {...settings}\r\n            />,\r\n\r\n            <a key='Download' href={this.props.canvasHref} download>\r\n                <Button\r\n                    image={DownloadImage}\r\n                    pressed={false}\r\n                    animatePress={true}\r\n                    onClick={() => {}}\r\n                    {...settings}\r\n                />\r\n            </a>,\r\n        ];\r\n\r\n        const side = this.props.height;\r\n        const bgColor = this.props.bgColor;\r\n\r\n        return (\r\n            <div\r\n                key='container'\r\n                id='container'\r\n                style={{\r\n                    width: `${this.props.width}px`,\r\n                    height: `${side}px`,\r\n                    backgroundColor: `${bgColor}`,\r\n                    borderBottom: bgColor === '#ffffff' ? '0.05em solid black' : 'none',\r\n                }}\r\n            >\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nexport default class Palette extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const R = 5*Math.min(this.props.width, this.props.height)*0.5 / 6;\r\n        const r = 2*R / 3;\r\n\r\n        this.state = {\r\n            R,\r\n            r,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw();\r\n        const canvas = this.refs.canvas;\r\n        const self = this;\r\n\r\n        // компьютерное управление\r\n        canvas.addEventListener('click', function(event){\r\n            const width = self.props.width;\r\n            const height = self.props.height;\r\n\r\n            const colors = self.props.colors;\r\n            const N = colors.length;\r\n\r\n            const R = self.state.R;\r\n            const r = self.state.r;\r\n\r\n            let {clientX:x, clientY:y} = event;\r\n            y -= self.props.panelProps.height;\r\n\r\n            // переход в декартову систему в центре цветового круга\r\n            x -= width/2;\r\n            y -= height/2;\r\n            y = -y;\r\n\r\n            // выход за границы круга\r\n            if (Math.sqrt(x*x+y*y) > R || Math.sqrt(x*x+y*y) < r) {\r\n                self.props.closePalette();\r\n                return;\r\n            }\r\n\r\n            // выбор цветового сегмента по углу от центра\r\n            let fi = Math.atan2(x, y) / (Math.PI/180);\r\n            fi = fi < 0 ? 360+fi : fi;\r\n            const k = Math.floor(N*fi/360)\r\n            const color = colors[k];\r\n            self.props.setBrushColor(color);\r\n\r\n            self.props.closePalette();\r\n        });\r\n\r\n    }\r\n\r\n    animate(options) {\r\n        const start = performance.now();\r\n        requestAnimationFrame(function animate(time) {\r\n            let timeFraction = (time-start)/options.duration;\r\n            if (timeFraction < 0) timeFraction = 0;\r\n            if (timeFraction > 1) timeFraction = 1;\r\n\r\n            let progress = options.timing(timeFraction);\r\n            options.draw(progress);\r\n\r\n            if (timeFraction < 1) requestAnimationFrame(animate);\r\n        });\r\n    }\r\n\r\n    draw() {\r\n        const self = this;\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n        const width = this.props.width;\r\n        const height = this.props.height;\r\n\r\n        const colors = this.props.colors;\r\n        const N = colors.length;\r\n        const R = this.state.R;\r\n        const r = this.state.r;\r\n\r\n        // фон\r\n        this.refs.bg.style.backgroundColor = 'rgba(222, 222, 222, 0.5)';\r\n        this.animate({\r\n            duration: 200,\r\n            timing: (timeFraction) => Math.pow(timeFraction, 2),\r\n            draw: function slide(progress) {\r\n                if (!self.refs.bg) return;\r\n                self.refs.bg.style.top =\r\n                    self.props.panelProps.height -\r\n                    self.props.height + self.props.height*progress + 'px';\r\n            }\r\n        });\r\n\r\n        // сектора палитры\r\n        let lastDrawedSector = -1;\r\n        let angle = 2*Math.PI / N;\r\n        let start = -Math.PI/2;\r\n\r\n        // начало координат в центре круга\r\n        ctx.translate(width/2, height/2);\r\n\r\n        setTimeout(() => this.animate({\r\n            duration: 150,\r\n            timing: (timeFraction) => Math.pow(timeFraction, 2),\r\n            draw: function appear(progress) {\r\n                // текущий\r\n                let sector = Math.ceil(N*progress)-1;\r\n\r\n                // рисование секторов от последнего нарисованного до текущего\r\n                for (let i = lastDrawedSector + 1; i <= sector; i++) {\r\n                    ctx.fillStyle = colors[i];\r\n\r\n                    ctx.beginPath();\r\n                    ctx.arc(0, 0, R, start, start+angle, false);\r\n                    ctx.arc(0, 0, r, start+angle, start, true);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n\r\n                    // поворот, следующий сектор\r\n                    ctx.rotate(angle);\r\n                }\r\n\r\n                lastDrawedSector = sector;\r\n            }\r\n        }), 200);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='bg'\r\n                ref='bg'\r\n                style={{\r\n                    marginTop: 0,\r\n                    top: this.props.panelProps.height,\r\n                    height: this.props.height,\r\n                    width: this.props.width\r\n                }}\r\n            >\r\n            <canvas\r\n                id='palette'\r\n                ref='canvas'\r\n                height={this.props.height}\r\n                width={this.props.width}\r\n            >\r\n            </canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nexport default class ThicknessSlider extends Component {\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.appear();\r\n\r\n        const line = this.refs.line;\r\n        let lineCoords = line.getBoundingClientRect();\r\n\r\n        const thumb = this.refs.thumb;\r\n        let shiftX;\r\n\r\n        const minThickness = this.props.panelProps.brush.minThickness;\r\n        const maxThickness = this.props.panelProps.brush.maxThickness;\r\n        const self = this;\r\n\r\n        thumb.addEventListener('mousedown', function(event) {\r\n            startDrag(event.clientX);\r\n            document.addEventListener('mousemove', onDocumentMouseMove);\r\n            document.addEventListener('mouseup', onDocumentMouseUp);\r\n        });\r\n\r\n        document.addEventListener('touchstart', function(event) {\r\n            if (!event.target.closest('.slider__bg')) return;\r\n            startDrag(event.targetTouches[0].clientX);\r\n            document.addEventListener('touchmove', onDocumentTouchMove);\r\n            document.addEventListener('touchend', onDocumentTouchEnd);\r\n        })\r\n\r\n        function startDrag(startClientX) {\r\n            const thumbCoords = thumb.getBoundingClientRect();\r\n            shiftX = startClientX - thumbCoords.left;\r\n        }\r\n\r\n        function onDocumentMouseMove(event) {\r\n            moveTo(event.clientX);\r\n        }\r\n\r\n        function onDocumentTouchMove(event) {\r\n            moveTo(event.targetTouches[0].clientX);\r\n        }\r\n\r\n        function moveTo(clientX) {\r\n            let newLeft = clientX - shiftX - lineCoords.left;\r\n\r\n            if (newLeft < 0) newLeft = 0;\r\n\r\n            const rightEdge = line.offsetWidth - thumb.offsetWidth;\r\n            if (newLeft > rightEdge) newLeft = rightEdge;\r\n\r\n            thumb.style.left = newLeft + 'px';\r\n\r\n            let newThickness =\r\n                minThickness + newLeft/rightEdge * maxThickness;\r\n            self.props.setBrushThickness(newThickness);\r\n        }\r\n\r\n        function onDocumentMouseUp() {\r\n            document.removeEventListener('mousemove', onDocumentMouseMove);\r\n            document.removeEventListener('mouseup', onDocumentMouseUp);\r\n        }\r\n\r\n        function onDocumentTouchEnd() {\r\n            document.removeEventListener('touchmove', onDocumentTouchMove);\r\n            document.removeEventListener('touchend', onDocumentTouchEnd);\r\n        }\r\n\r\n    }\r\n\r\n    animate(options) {\r\n        const start = performance.now();\r\n        requestAnimationFrame(function animate(time) {\r\n            let timeFraction = (time-start)/options.duration;\r\n            if (timeFraction < 0) timeFraction = 0;\r\n            if (timeFraction > 1) timeFraction = 1;\r\n\r\n            let progress = options.timing(timeFraction);\r\n            options.draw(progress);\r\n\r\n            if (timeFraction < 1) requestAnimationFrame(animate);\r\n        });\r\n    }\r\n\r\n    appear() {\r\n        const self = this;\r\n        this.animate({\r\n            duration: 150,\r\n            timing: (timeFraction) => Math.pow(timeFraction, 2),\r\n            draw: function slide(progress) {\r\n                if (!self.refs.slider) return;\r\n                self.refs.slider.style.top =\r\n                    self.props.panelProps.height -\r\n                    self.props.height + self.props.height*progress + 'px';\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const sliderLineHeight = this.props.height / 5;\r\n        const sliderThumbHeight = 5*this.props.height / 6;\r\n        const sliderThumbWidth = sliderThumbHeight / 3;\r\n\r\n        const minThickness = this.props.panelProps.brush.minThickness;\r\n        const maxThickness = this.props.panelProps.brush.maxThickness;\r\n        const thickness = this.props.panelProps.brush.thickness;\r\n\r\n        const rightEdge = Math.floor(this.props.width - sliderThumbWidth);\r\n        const thumbStartLeft = thickness/maxThickness * rightEdge -\r\n            minThickness/maxThickness * rightEdge;\r\n\r\n        return (\r\n            <div\r\n                className='slider__bg'\r\n                ref='slider'\r\n                style={{\r\n                    backgroundColor: 'rgba(222, 222, 222, 0.5)',\r\n                    width: this.props.width + 'px',\r\n                    height: this.props.height + 'px',\r\n                    marginLeft: -this.props.width/2 + 'px',\r\n                    borderBottomLeftRadius: 0.1*this.props.height + 'px',\r\n                    borderBottomRightRadius: 0.1*this.props.height + 'px',\r\n                }}\r\n            >\r\n                <div\r\n                    className='slider__line'\r\n                    ref='line'\r\n                    style={{\r\n                        backgroundColor: this.props.bgColor,\r\n                        height: sliderLineHeight + 'px',\r\n                        marginTop: -sliderLineHeight/2 + 'px',\r\n                        borderTop: this.props.bgColor === '#ffffff' ? '0.05em solid black' : 'none',\r\n                        borderBottom: this.props.bgColor === '#ffffff' ? '0.05em solid black' : 'none', \r\n                    }}\r\n                >\r\n                    <div\r\n                        className='slider__thumb'\r\n                        ref='thumb'\r\n                        style={{\r\n                            backgroundColor: this.props.panelProps.brush.color,\r\n                            height: sliderThumbHeight + 'px',\r\n                            width: sliderThumbWidth + 'px',\r\n                            top: -sliderThumbHeight/2 + sliderLineHeight/2 + 'px',\r\n                            left: thumbStartLeft + 'px'\r\n                        }}\r\n                    >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Canvas from './Canvas';\r\nimport ControlPanel from './ControlPanel';\r\nimport Palette from './Palette';\r\nimport ThicknessSlider from './ThicknessSlider';\r\n\r\nfunction reverseColor(color) {\r\n    color = color.slice(1);\r\n    let r = parseInt(color.slice(0, 2), 16);\r\n    let g = parseInt(color.slice(2, 4), 16);\r\n    let b = parseInt(color.slice(4, 6), 16);\r\n    r = (255 - r).toString(16);\r\n    g = (255 - g).toString(16);\r\n    b = (255 - b).toString(16);\r\n    r = r.length < 2 ? '0' + r : r;\r\n    g = g.length < 2 ? '0' + g : g;\r\n    b = b.length < 2 ? '0' + b : b;\r\n    return `#${r}${g}${b}`;\r\n}\r\n\r\nconst {clientWidth, clientHeight} = document.documentElement;\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvas = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.state.mode = 'draw';\r\n\r\n        this.state.window = {\r\n            height: clientHeight,\r\n            width: clientWidth\r\n        };\r\n\r\n        const N = 6;\r\n        let controlPanelHeight = Math.floor(0.11*clientHeight);\r\n        if (controlPanelHeight > clientWidth / N) controlPanelHeight = clientWidth / N;\r\n\r\n        this.state.controlPanel = {\r\n            height: controlPanelHeight,\r\n\r\n            brush: {\r\n                color: '#ffaaaa',\r\n                thickness: 0.01*this.state.window.height,\r\n                minThickness: 1,\r\n                maxThickness: 0.05*this.state.window.height,\r\n                opacity: 100,\r\n            },\r\n\r\n        };\r\n\r\n        this.state.palette = {\r\n            open: false,\r\n\r\n            // colors: [\r\n            //     '#000000',\r\n            //     '#501111',\r\n            //     '#336600',\r\n            //     '#000066',\r\n            //     '#ffffff',\r\n            //     '#afeeee',\r\n            //     '#cc99ff',\r\n            //     '#ffff99',\r\n            // ],\r\n\r\n            colors: [\r\n                '#000000',\r\n                '#501111',\r\n                '#cc9966',\r\n                '#ffff99',\r\n                '#336600',\r\n                '#33cc99',\r\n                '#afeeee',\r\n                '#000066',\r\n                '#6633CC',\r\n                '#cc99ff',\r\n                '#ffaaaa',\r\n                '#cc3366',\r\n            ],\r\n        };\r\n\r\n        this.state.thicknessSlider = {\r\n            open: false,\r\n        };\r\n\r\n        this.state.canvasURL = null;\r\n    }\r\n\r\n    setCanvasURL(canvasURL) {\r\n        this.setState({ canvasURL });\r\n    }\r\n\r\n    undo() {\r\n        this.canvas.current.undo();\r\n    }\r\n\r\n    setDrawMode() {\r\n        this.setState({ mode: 'draw' });\r\n    }\r\n\r\n    setEraseMode() {\r\n        this.setState({ mode: 'erase' });\r\n    }\r\n\r\n    // ресайз более не предусмотрен, не понятно как при нем менять canvas!\r\n\r\n    // componentDidMount() {\r\n    //     const self = this;\r\n    //     window.addEventListener('resize', function(event) {\r\n    //         const {clientWidth, clientHeight} = document.documentElement;\r\n    //         let window = Object.assign({}, self.state.window);\r\n    //         window.width = clientWidth;\r\n    //         window.height = clientHeight;\r\n    //         self.setState({ window });\r\n    //     });\r\n    // }\r\n\r\n    openPalette() {\r\n        if (this.state.thicknessSlider.open) this.closeSlider();\r\n        let palette = Object.assign({}, this.state.palette);\r\n        palette.open = true;\r\n        this.setState({palette});\r\n    }\r\n\r\n    closePalette() {\r\n        let palette = Object.assign({}, this.state.palette);\r\n        palette.open = false;\r\n        this.setState({palette});\r\n    }\r\n\r\n    openSlider() {\r\n        if (this.state.palette.open) this.closePalette();\r\n        let thicknessSlider = Object.assign({}, this.state.thicknessSlider);\r\n        thicknessSlider.open = true;\r\n        this.setState({thicknessSlider});\r\n    }\r\n\r\n    closeSlider() {\r\n        let thicknessSlider = Object.assign({}, this.state.thicknessSlider);\r\n        thicknessSlider.open = false;\r\n        this.setState({thicknessSlider});\r\n    }\r\n\r\n    setBrushColor(color) {\r\n        let controlPanel = Object.assign({}, this.state.controlPanel);\r\n        controlPanel.brush.color = color;\r\n        this.setState({controlPanel});\r\n    }\r\n\r\n    setBrushThickness(thickness) {\r\n        let controlPanel = Object.assign({}, this.state.controlPanel);\r\n        controlPanel.brush.thickness = thickness;\r\n        this.setState({controlPanel});\r\n    }\r\n\r\n    render() {\r\n        const canvasHeight = this.state.window.height-this.state.controlPanel.height;\r\n        const bgColor = reverseColor(this.state.controlPanel.brush.color);\r\n\r\n        let canvas = <Canvas\r\n            key='Canvas'\r\n            ref={this.canvas}\r\n            panelProps={this.state.controlPanel}\r\n            width={this.state.window.width}\r\n            height={canvasHeight}\r\n\r\n            app={this.state}\r\n            closeSlider={() => this.closeSlider()}\r\n            setCanvasURL={this.setCanvasURL.bind(this)}\r\n\r\n\r\n        />;\r\n\r\n        let controlPanel = <ControlPanel\r\n            id='ControlPanel'\r\n            key='ControlPanel'\r\n            panelProps={this.state.controlPanel}\r\n            height={this.state.controlPanel.height}\r\n            width={this.state.window.width}\r\n            orientation={this.state.controlPanel.orientation}\r\n            bgColor={bgColor}\r\n\r\n            app={this.state}\r\n\r\n            openPalette={() => this.openPalette()}\r\n            closePalette={() => this.closePalette()}\r\n\r\n            openSlider={() => this.openSlider()}\r\n            closeSlider={() => this.closeSlider()}\r\n\r\n            setDrawMode={() => this.setDrawMode()}\r\n            setEraseMode={() => this.setEraseMode()}\r\n\r\n            undo={() => this.undo()}\r\n\r\n            canvasHref={this.state.canvasURL}\r\n        />;\r\n\r\n        let palette;\r\n        if (this.state.palette.open) {\r\n            palette = <Palette\r\n                key='Palette'\r\n                colors={this.state.palette.colors}\r\n                width={this.state.window.width}\r\n                height={this.state.window.height - this.state.controlPanel.height}\r\n                panelProps={this.state.controlPanel}\r\n                style={{position: 'fixed'}}\r\n                bgColor={bgColor}\r\n\r\n                open={this.state.palette.open}\r\n\r\n                closePalette={() => this.closePalette()}\r\n                setBrushColor={(color) => this.setBrushColor(color)}\r\n            />;\r\n        } else {\r\n            palette = null;\r\n        }\r\n\r\n        let thicknessSlider;\r\n        if (this.state.thicknessSlider.open) {\r\n            thicknessSlider = <ThicknessSlider\r\n                key='ThicknessSlider'\r\n                width={this.state.controlPanel.height*4}\r\n                height={this.state.controlPanel.height}\r\n                panelProps={this.state.controlPanel}\r\n                bgColor={bgColor}\r\n\r\n                open={this.state.thicknessSlider.open}\r\n                closeSlider={() => this.closeSlider()}\r\n                setBrushThickness={(thickness) => this.setBrushThickness(thickness)}\r\n            />;\r\n        } else {\r\n            thicknessSlider = null;\r\n        }\r\n\r\n        return [controlPanel, canvas, palette, thicknessSlider];\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\ndocument.addEventListener('mousedown', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\ndocument.addEventListener('dblclick', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\ndocument.addEventListener('contextmenu', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\ndocument.addEventListener('touchstart', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\ndocument.addEventListener('touchmove', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}